{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Panini","text":"<p>Rapid Development Environment Managment.</p>"},{"location":"#install","title":"Install","text":"<pre><code>pip install panini\n</code></pre>"},{"location":"#quickstart","title":"Quickstart","text":"<p>Write this to the <code>pan.ini</code> file. <pre><code>[postgres]\npostgres=17.4\npassword=devpass\n\n[redis]\n\n[devbox]\nnix=\n  process-compose\n  uv\n\n[app]\ncmd=uv run python3 app.py\nvia=devbox\n\n[up]\nservices=\n    postgres\n    redis\n    app\nvia=devbox\n\n[help]\nhelp       = Manage testapp\npostgres   = Start postgrees server\nredis      = Start redis server\ndevbox     = Run something inside nix\napp        = Start testapp\nup         = Run app and dependencies.\n</code></pre></p> <p>Run any of the defined commands, for example: <pre><code>$ panini up\n</code></pre> </p>"},{"location":"#congratulation","title":"Congratulation!","text":"<p>You got</p> <ul> <li>An isolated development environment (Based on nix and docker)</li> <li>Handy commands to manage your app</li> <li>Easily run your whole app and its dependencies</li> </ul> <p>Forget the days of</p> <ul> <li>Containerizing everything so it fits into <code>docker compose</code></li> <li>Slow test runs because of docker for mac.</li> <li>Huge YAML files nobody understands.</li> <li>Many weird files in your repo that barely accomplish the same.</li> <li>Isolated development environments are not a luxury anyomore.</li> </ul>"},{"location":"drivers/","title":"Drivers","text":""},{"location":"drivers/#section-types","title":"Section Types","text":""},{"location":"drivers/#cmd","title":"<code>cmd</code>","text":"<p>Runs a command, injecting arguments into <code>{}</code> placeholder if present.</p> Key Description <code>cmd</code> Command to run"},{"location":"drivers/#getcmd","title":"<code>getcmd</code>","text":"<p>Prints the resolved shell command for a task.</p> Key Description <code>getcmd</code> Command to evaluate and echo (optional)"},{"location":"drivers/#list","title":"<code>list</code>","text":"<p>Prints a list of tasks.</p> Key Description <code>list</code> Newline-separated list of task names (optional)"},{"location":"drivers/#script","title":"<code>script</code>","text":"<p>Executes the given source code as a script.</p> Key Description <code>script</code> Bash or shell script"},{"location":"drivers/#services","title":"<code>services</code>","text":"<p>Runs <code>process-compose</code> with the given services.</p> Key Description <code>services</code> Newline-separated service names"},{"location":"drivers/#shell","title":"<code>shell</code>","text":"<p>Executes a shell snippet using a customizable shell command wrapper.</p> Key Description <code>shell</code> Shell script <code>shellcmd</code> Template for shell runner (optional, defaults to <code>sh -exc {} --</code>)"},{"location":"drivers/#use","title":"<code>use</code>","text":"<p>Imports and executes another task, passing along keyword arguments.</p> Key Description <code>use</code> Task name to import <code>**kw</code> Additional values passed to task"},{"location":"drivers/#package-managers","title":"Package Managers","text":""},{"location":"drivers/#venv","title":"<code>venv</code>","text":"<p>Sets up a temporary Python virtual environment using <code>uv</code> and runs a command inside it.</p> Key Description <code>venv</code> Python requirements to install <code>cmd</code> Command to run inside venv <code>python</code> Python interpreter path (optional)"},{"location":"drivers/#nix","title":"<code>nix</code>","text":"<p>Uses <code>nix-shell</code> to run a command in a Nix environment.</p> Key Description <code>nix</code> Newline-separated packages <code>cmd</code> Command to run in nix-shell (optional, defaults to <code>{}</code>)"},{"location":"drivers/#docker-services","title":"Docker Services","text":""},{"location":"drivers/#mysql","title":"<code>mysql</code>","text":"Key Description <code>mysql</code> MySQL image version <code>port</code> Exposed port on host machine (optional) <code>user</code> Name of the database user (optional) <code>password</code> Password for the user (optional) <code>db</code> Name of the database to create (optional)"},{"location":"drivers/#redis","title":"<code>redis</code>","text":"Key Description <code>redis</code> Redis image version <code>port</code> Exposed port on host machine (optional)"},{"location":"drivers/#postgres","title":"<code>postgres</code>","text":"Key Description <code>postgres</code> PostgreSQL image version <code>port</code> Exposed port on host machine (optional) <code>user</code> Name of the database user (optional) <code>password</code> Password for the user (optional) <code>db</code> Name of the database to create (optional) <code>lang</code> Sets the container's <code>LANG</code> env var (optional)"}]}